- Mobile App: Can use our phone feature 

1. Create Count Mobile App

>> I am using snack expo which is a react native in browser. Please generate React Native Code for a simple click-counter app. It should have a button that increases a count number every time its pressed and it should display the current count on the screen. Please provide a step by step guide about how to proceed and explain each step as this is my first time!

==> 

import React, { useState } from "react";
import { View, Text, Button, StyleSheet } from "react-native";

export default function App() {
  // 1) Keep track of the count number
  const [count, setCount] = useState(0);

  // 2) Render the UI
  return (
    <View style={styles.container}>
      <Text style={styles.title}>Simple Click Counter</Text>
      <Text style={styles.counter}>Count: {count}</Text>

      {/* 3) When pressed, increase the count */}
      <Button title="Increase Count" onPress={() => setCount(count + 1)} />
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,                 // take full screen
    justifyContent: "center",// center vertically
    alignItems: "center",    // center horizontally
    padding: 24,
    backgroundColor: "#f7f7f7",
  },
  title: {
    fontSize: 22,
    fontWeight: "600",
    marginBottom: 12,
  },
  counter: {
    fontSize: 28,
    fontWeight: "bold",
    marginBottom: 20,
  },
});


----------------------------------------------------------------------

2. Make more interesting 

>> Please modify the app and make it look interesting 


import React, { useState } from "react";
import { View, Text, Pressable, StyleSheet } from "react-native";

export default function App() {
  const [count, setCount] = useState(0);

  return (
    <View style={styles.container}>
      <Text style={styles.title}>ðŸŽ‰ Fun Click Counter ðŸŽ‰</Text>
      
      <View style={styles.counterBox}>
        <Text style={styles.counter}>{count}</Text>
      </View>

      <Pressable style={styles.button} onPress={() => setCount(count + 1)}>
        <Text style={styles.buttonText}>+ Increase</Text>
      </Pressable>

      <Pressable 
        style={[styles.button, styles.resetButton]} 
        onPress={() => setCount(0)}
      >
        <Text style={styles.buttonText}>â†º Reset</Text>
      </Pressable>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: "center",
    alignItems: "center",
    backgroundColor: "#ffeaa7",
    padding: 20,
  },
  title: {
    fontSize: 26,
    fontWeight: "bold",
    marginBottom: 30,
    color: "#2d3436",
  },
  counterBox: {
    backgroundColor: "#fab1a0",
    padding: 40,
    borderRadius: 20,
    marginBottom: 30,
    elevation: 5, // shadow on Android
    shadowColor: "#000", // shadow on iOS
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.3,
    shadowRadius: 5,
  },
  counter: {
    fontSize: 50,
    fontWeight: "bold",
    color: "#2d3436",
  },
  button: {
    backgroundColor: "#55efc4",
    paddingVertical: 15,
    paddingHorizontal: 40,
    borderRadius: 25,
    marginVertical: 10,
    elevation: 3,
  },
  resetButton: {
    backgroundColor: "#d63031",
  },
  buttonText: {
    fontSize: 18,
    fontWeight: "bold",
    color: "#fff",
    textAlign: "center",
  },
});

























